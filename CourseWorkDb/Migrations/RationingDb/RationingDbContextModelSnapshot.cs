// <auto-generated />
using CourseWorkDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWorkDb.Migrations.RationingDb
{
    [DbContext(typeof(RationingDbContext))]
    partial class RationingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Output", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("OutputPlan")
                        .HasColumnType("real");

                    b.Property<float>("OutputFact")
                        .HasColumnType("real");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("Quarter")
                        .HasColumnType("smallint");
                
                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Outputs");
                });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);


                    b.Property<string>("HeadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);


                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.ProductType", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("ProductionType")
                    .IsRequired()
                    .HasColumnType("nvarchar(30)")
                    .HasMaxLength(30);
                b.HasKey("Id");

                b.ToTable("ProductTypes");
            });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ProductionTypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.HasKey("Id");

                    b.HasIndex("ProductionTypeId");

                    b.ToTable("Products");
                    
                });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Release", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<float>("ReleasePlan")
                    .HasColumnType("real");

                b.Property<float>("ReleasetFact")
                    .HasColumnType("real");

                b.Property<int>("CompanyId")
                    .HasColumnType("int");

                b.Property<int>("ProductId")
                    .HasColumnType("int");

                b.Property<short>("Quarter")
                    .HasColumnType("smallint");

                b.Property<short>("Year")
                    .HasColumnType("smallint");

                b.HasKey("Id");

                b.HasIndex("CompanyId");

                b.HasIndex("ProductId");

                b.ToTable("Releases");
            });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Output", b =>
                {
                    b.HasOne("CourseWorkDb.Models.Tables.Company", "Company")
                        .WithMany("Output")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWorkDb.Models.Tables.Product", "Product")
                        .WithMany("Output")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseWorkDb.Models.Tables.Release", b =>
                {
                    b.HasOne("CourseWorkDb.Models.Tables.Company", "Company")
                        .WithMany("Release")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWorkDb.Models.Tables.Product", "Product")
                        .WithMany("ProductionsAndConsumption")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
